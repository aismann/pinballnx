#ifndef BALLLOCK_H_
#define BALLLOCK_H_

#include <vector>
#include "cross2d/c2d.h"
#include "Box2D/Box2D.h"
#include "util.h"

using namespace std;

class BallLock {
    public:
        BallLock(C2DRenderer* renderer, b2World& world, int layerID, int shapeID, int releaseLocation);
        b2Fixture* getFixture();
        int getLocation();
    private:
        int m_layerID;
        int m_releaseLocation;
        b2Fixture* m_fixture;
        vector<float> m_upperLock = {843.5, 532.5, 835.8, 540.9, 834.4, 543.6, 833.0, 546.2, 833.0, 548.1, 833.0, 549.9, 850.2, 564.0, 867.4, 578.0, 869.5, 578.0, 871.5, 578.0, 881.8, 567.7, 892.0, 557.5, 892.0, 555.2, 892.0, 553.0, 873.8, 538.5, 855.5, 524.0, 853.3, 524.0, 851.2, 524.0, 843.5, 532.5};
        vector<float> m_leftLock = {1086.2, 23.2, 1085.0, 24.4, 1085.0, 27.5, 1085.0, 30.6, 1086.2, 31.8, 1087.4, 33.0, 1090.5, 33.0, 1093.6, 33.0, 1094.8, 31.8, 1096.0, 30.6, 1096.0, 27.5, 1096.0, 24.4, 1094.8, 23.2, 1093.6, 22.0, 1090.5, 22.0, 1087.4, 22.0, 1086.2, 23.2};
        vector<float> m_middleLock = {762.5, 373.9, 760.5, 374.8, 758.0, 377.5, 755.5, 380.2, 755.5, 385.6, 755.5, 391.0, 758.7, 394.1, 761.9, 397.3, 767.4, 397.8, 772.9, 398.2, 775.9, 394.9, 778.9, 391.6, 779.6, 388.7, 780.2, 385.8, 779.6, 382.6, 779.0, 379.4, 776.1, 376.6, 773.2, 373.8, 768.8, 373.4, 764.5, 373.0, 762.5, 373.9};
        vector<float> m_upperMiddleLock = {792.5, 385.9, 790.5, 386.8, 788.0, 389.5, 785.5, 392.2, 785.5, 397.6, 785.5, 403.0, 788.7, 406.1, 791.9, 409.3, 797.4, 409.8, 802.9, 410.2, 805.9, 406.9, 808.9, 403.6, 809.6, 400.7, 810.2, 397.8, 809.6, 394.6, 809.0, 391.4, 806.1, 388.6, 803.2, 385.8, 798.8, 385.4, 794.5, 385.0, 792.5, 385.9};
        vector<float> m_lowerLock1 = {172.0, 229.0, 172.0, 248.0, 183.5, 248.0, 195.0, 248.0, 195.0, 229.0, 195.0, 210.0, 183.5, 210.0, 172.0, 210.0, 172.0, 229.0};
        vector<float> m_lowerLock2 = {118.0, 351.0, 118.0, 370.0, 129.5, 370.0, 141.0, 370.0, 141.0, 351.0, 141.0, 332.0, 129.5, 332.0, 118.0, 332.0, 118.0, 351.0};
        vector<vector<float>> m_points = {
            m_upperLock, m_leftLock, m_middleLock, m_upperMiddleLock, m_lowerLock1, m_lowerLock2
        };
};

#endif