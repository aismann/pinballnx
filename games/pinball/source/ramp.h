#ifndef RAMP_H_
#define RAMP_H_

#include<vector>
#include "cross2d/c2d.h"
#include "Box2D/Box2D.h"
#include "util.h"

using namespace std;

// The ramp class has a box2d body and fixture but they are only for detection purposes.
// The fixture in here is a box2d sensor and doesn't cause any forces. 
// The collision detection is handled in the Table class in the overriden
// BeginContact and EndContact methods from the b2ContactListener that Table extends.
// Creating a bidirectional ramp actually takes 2 Ramp objects, one for up and one for down
// because this class only transitions the pinball TO another layer. 
// This means you can also use this class to make holes that the ball can fall through but can't go up.
class Ramp {
    public:
        // C2DRenderer is only for debug graphics, can be removed if desired.
        // b2World is necessary for adding the sensor.
        // rampID specifies the collision shape to load.
        // layerID specifies the layer that the ramp transitions to.
        Ramp(C2DRenderer* renderer, b2World& world, int rampID, int layerID);
        b2Fixture* getFixture();
        int getLayerID();
    private:
        b2Fixture* m_fixture;
        int m_layerID;
        vector<float> m_ramp1 = {922.2, 66.2, 921.1, 67.6, 920.4, 87.6, 919.7, 107.7, 920.8, 108.4, 921.8, 109.0, 945.9, 109.5, 970.0, 110.0, 976.0, 112.0, 981.9, 114.0, 983.3, 114.0, 984.6, 114.0, 993.3, 95.2, 1002.0, 76.5, 1002.0, 74.8, 1002.0, 73.1, 1000.8, 72.3, 999.5, 71.5, 989.0, 68.6, 978.5, 65.7, 950.9, 65.3, 923.4, 64.8, 922.2, 66.2};
        vector<float> m_ramp1up2 = {1001.5, 91.6, 995.0, 105.3, 992.4, 111.1, 989.7, 117.0, 998.6, 121.9, 1006.7, 126.1, 1017.6, 135.8, 1028.5, 145.5, 1036.8, 153.7, 1045.2, 162.0, 1047.5, 162.0, 1049.8, 162.0, 1051.1, 160.3, 1052.5, 158.7, 1058.6, 154.6, 1064.7, 150.5, 1070.3, 146.6, 1076.0, 142.7, 1076.0, 139.6, 1076.0, 136.5, 1075.0, 133.0, 1074.0, 129.5, 1069.3, 123.3, 1064.5, 117.1, 1055.5, 109.2, 1046.5, 101.3, 1034.0, 92.8, 1021.5, 84.4, 1017.0, 81.8, 1012.5, 79.3, 1010.2, 78.6, 1008.0, 77.9, 1001.5, 91.6};
        vector<float> m_ramp1Down = {840.0, 66.5, 838.8, 67.9, 837.8, 87.1, 836.9, 106.2, 837.4, 107.6, 837.9, 109.0, 875.4, 109.0, 912.8, 109.0, 913.9, 105.7, 914.9, 102.5, 915.6, 85.3, 916.3, 68.0, 915.0, 66.5, 913.8, 65.0, 877.5, 65.0, 841.2, 65.0, 840.0, 66.5};
        vector<float> m_ramp2 = {957.5, 622.6, 950.5, 625.1, 944.0, 626.2, 937.5, 627.3, 927.0, 627.9, 916.5, 628.5, 916.2, 647.4, 916.0, 666.4, 916.9, 667.3, 917.8, 668.2, 933.7, 667.1, 949.5, 665.9, 954.5, 664.9, 959.5, 663.8, 962.2, 662.4, 964.8, 661.0, 967.2, 661.0, 969.5, 661.0, 973.2, 660.0, 976.9, 658.9, 979.0, 655.9, 981.2, 653.0, 973.0, 636.5, 964.9, 620.0, 957.5, 622.6};
        vector<float> m_ramp2up2 = {988.0, 603.6, 975.5, 612.1, 974.0, 613.0, 972.5, 613.9, 976.8, 622.2, 981.1, 630.5, 987.3, 641.7, 993.5, 653.0, 1004.9, 647.9, 1014.5, 642.8, 1023.8, 637.3, 1033.0, 631.8, 1030.3, 627.1, 1027.6, 623.5, 1018.7, 613.5, 1009.7, 603.5, 1005.2, 599.2, 1000.6, 595.0, 988.0, 603.6};
        vector<float> m_ramp2Down = {1026.5, 573.9, 1021.7, 580.7, 1014.7, 585.6, 1007.8, 590.5, 1006.7, 591.2, 1005.7, 591.8, 1017.1, 604.2, 1028.5, 616.5, 1032.4, 621.5, 1036.4, 626.5, 1037.1, 627.4, 1037.9, 628.3, 1042.2, 625.7, 1046.5, 623.2, 1057.3, 611.7, 1068.0, 600.2, 1068.0, 598.8, 1068.0, 597.5, 1059.2, 588.9, 1050.5, 580.3, 1045.1, 577.4, 1039.8, 574.6, 1035.5, 570.8, 1031.3, 567.1, 1026.5, 573.9};
        vector<float> m_hole1 = {235.0, 65.0, 235.0, 84.0, 262.0, 84.0, 289.0, 84.0, 289.0, 65.0, 289.0, 46.0, 262.0, 46.0, 235.0, 46.0, 235.0, 65.0};
        vector<float> m_hole2 = {197.5, 600.2, 196.8, 609.5, 197.2, 615.0, 197.5, 620.5, 227.3, 620.8, 257.0, 621.0, 257.0, 606.0, 257.0, 591.0, 227.6, 591.0, 198.2, 591.0, 197.5, 600.2};
        vector<float> m_ramp3 = {734.0, 543.6, 714.0, 562.2, 714.0, 565.6, 714.0, 569.0, 724.8, 579.5, 735.5, 590.0, 738.8, 590.0, 742.1, 590.0, 745.0, 588.5, 748.0, 586.9, 748.0, 584.6, 748.0, 582.2, 749.6, 580.9, 751.2, 579.6, 753.0, 578.5, 754.9, 577.5, 764.5, 569.5, 774.2, 561.5, 777.5, 559.0, 780.8, 556.5, 782.5, 553.1, 784.1, 549.7, 779.3, 544.6, 774.5, 539.5, 767.5, 532.2, 760.6, 525.0, 757.3, 525.0, 754.0, 525.0, 734.0, 543.6};
        vector<float> m_ramp3Down = {708.5, 497.6, 702.5, 503.2, 695.5, 508.7, 688.5, 514.3, 684.8, 517.9, 681.0, 521.4, 681.0, 524.3, 681.0, 527.1, 694.6, 541.8, 708.3, 556.5, 711.5, 556.5, 714.8, 556.5, 731.9, 540.2, 749.0, 523.8, 749.0, 520.5, 749.0, 517.2, 735.6, 504.6, 722.2, 492.0, 718.4, 492.0, 714.5, 492.1, 708.5, 497.6};
        vector<float> m_ramp3up2 = {765.7, 575.1, 741.0, 593.2, 741.0, 595.0, 741.0, 596.9, 743.0, 600.5, 745.0, 604.1, 745.0, 605.2, 745.0, 606.3, 747.5, 609.6, 750.0, 612.9, 751.8, 616.3, 753.5, 617.8, 765.0, 618.5, 776.5, 619.2, 791.0, 616.5, 805.5, 613.9, 811.5, 610.6, 817.5, 607.4, 820.0, 605.9, 822.5, 604.5, 824.8, 602.6, 827.0, 600.7, 827.0, 597.7, 827.0, 594.7, 816.2, 583.1, 805.3, 571.5, 804.0, 569.0, 802.7, 566.5, 798.7, 561.7, 794.7, 557.0, 792.6, 557.0, 790.5, 557.0, 765.7, 575.1};
        vector<float> m_ramp1DownMid = {903.5, 374.1, 902.5, 375.1, 896.0, 379.8, 889.4, 384.5, 884.7, 388.4, 880.0, 392.2, 880.0, 394.5, 880.0, 396.8, 892.3, 406.4, 904.5, 416.0, 906.5, 416.0, 908.5, 416.0, 915.5, 410.5, 922.5, 404.9, 926.2, 400.7, 929.9, 396.5, 930.0, 394.4, 930.0, 392.3, 927.8, 389.0, 925.5, 385.6, 917.5, 379.4, 909.5, 373.1, 907.0, 373.1, 904.5, 373.1, 903.5, 374.1};
        vector<float> m_backdoorDown = {494.0, 674.4, 494.0, 676.8, 497.0, 690.0, 500.0, 703.2, 520.0, 704.0, 540.0, 704.0, 540.0, 701.6, 540.0, 699.2, 537.0, 686.0, 534.0, 672.8, 514.0, 672.0, 494.0, 672.0, 494.0, 674.4};
        vector<float> m_tunnelDown = {649.5, 12.3, 648.9, 13.6, 649.2, 29.0, 649.5, 44.5, 668.0, 44.5, 686.5, 44.5, 686.5, 28.0, 686.5, 11.5, 668.2, 11.2, 650.0, 11.0, 649.5, 12.3};
        // Access this vector by index of rampID to get the collision shape for that ramp
        vector<vector<float>> m_rampShapes = {
            m_ramp1, m_ramp1up2, m_ramp1Down, m_hole1, m_ramp2, m_ramp2up2, m_ramp2Down, m_hole2, m_ramp3, m_ramp3Down, m_ramp3up2, m_ramp1DownMid, m_backdoorDown, m_tunnelDown
        };
};

#endif