#ifndef RAMP_H_
#define RAMP_H_

#include<vector>
#include "cross2d/c2d.h"
#include "Box2D/Box2D.h"
#include "util.h"

using namespace std;

// The ramp class has a box2d body and fixture but they are only for detection purposes.
// The fixture in here is a  box2d sensors and doesn't cause any forces. 
// The collision detection is handled in the Table class in the overriden
// BeginContact and EndContact methods from the b2ContactListener that Table extends.
// Creating a bidirectional ramp actually takes 2 Ramp objects, one for up and one for down
// because this class only transitions the pinball TO another layer. 
// This means you can also use this class to make holes that the ball can fall through but can't go up.
class Ramp {
    public:
        // C2DRenderer is only for debug graphics, can be removed if desired.
        // b2World is necessary for adding the sensor.
        // rampID specifies the collision shape to load.
        // layerID specifies the layer that the ramp transitions to.
        Ramp(C2DRenderer* renderer, b2World& world, int rampID, int layerID);
        b2Fixture* getFixture();
        int getLayerID();
    private:
        b2Fixture* m_fixture;
        int m_layerID;
        vector<float> m_launchTubeExitSensor = {1080.3, 555.2, 1078.3, 557.5, 1074.7, 563.0, 1071.1, 568.5, 1064.1, 575.6, 1057.0, 582.7, 1057.0, 585.2, 1057.0, 587.6, 1058.2, 588.8, 1059.4, 590.0, 1061.7, 590.0, 1064.0, 590.0, 1071.4, 582.6, 1078.8, 575.1, 1083.0, 569.0, 1087.1, 562.9, 1091.8, 565.6, 1096.5, 568.3, 1101.0, 570.8, 1105.5, 573.3, 1107.5, 574.4, 1109.5, 575.6, 1114.0, 578.4, 1118.5, 581.2, 1121.2, 583.1, 1123.9, 585.0, 1125.8, 585.0, 1127.6, 585.0, 1128.8, 583.8, 1130.0, 582.6, 1130.0, 580.4, 1130.0, 578.2, 1125.6, 574.6, 1121.1, 571.0, 1110.8, 564.8, 1100.5, 558.7, 1095.2, 555.9, 1090.0, 553.0, 1086.2, 553.0, 1082.3, 553.0, 1080.3, 555.2};
        vector<float> m_ramp1 = {723.2, 151.7, 721.3, 154.5, 720.6, 156.5, 719.9, 158.5, 718.5, 166.5, 717.1, 174.5, 716.4, 187.8, 715.7, 201.1, 717.9, 203.4, 720.2, 205.8, 723.7, 206.5, 727.2, 207.1, 730.8, 209.0, 734.5, 210.9, 741.0, 212.1, 747.5, 213.2, 754.9, 214.6, 762.2, 216.0, 764.9, 216.0, 767.6, 216.0, 770.6, 213.2, 773.7, 210.5, 777.8, 201.5, 781.8, 192.5, 783.4, 186.4, 785.0, 180.2, 785.0, 176.6, 785.0, 173.0, 782.5, 170.9, 781.5, 168.8, 777.5, 166.8, 773.5, 164.7, 771.8, 163.9, 770.0, 163.0, 768.5, 163.0, 767.0, 163.0, 765.2, 162.1, 763.5, 161.1, 756.5, 158.5, 749.5, 155.9, 747.5, 154.8, 745.5, 153.6, 741.0, 151.3, 736.5, 149.1, 730.8, 149.0, 725.1, 149.0, 723.2, 151.7};
        vector<float> m_ramp1Down = {688.6, 139.8, 688.2, 140.5, 687.6, 147.5, 687.0, 154.5, 686.0, 177.4, 685.0, 200.3, 686.7, 202.2, 688.3, 204.0, 691.2, 204.0, 694.0, 204.0, 698.3, 202.1, 702.5, 200.1, 705.0, 199.8, 707.5, 199.5, 708.2, 193.5, 708.8, 187.5, 709.9, 184.7, 711.0, 181.9, 712.0, 170.4, 713.0, 158.9, 714.5, 156.0, 716.0, 153.1, 716.0, 150.7, 716.0, 148.2, 714.8, 147.2, 713.5, 146.2, 702.9, 142.6, 692.2, 139.0, 690.7, 139.0, 689.1, 139.0, 688.6, 139.8};
        vector<float> m_ramp2 = {737.0, 464.7, 735.5, 465.2, 732.8, 467.8, 730.0, 470.4, 730.0, 471.6, 730.0, 472.8, 728.4, 474.1, 726.8, 475.4, 725.8, 477.5, 724.9, 479.5, 722.0, 484.5, 719.1, 489.5, 716.4, 494.8, 713.8, 500.2, 714.3, 504.2, 714.8, 508.2, 717.2, 510.7, 719.5, 513.2, 723.0, 515.1, 726.5, 516.9, 733.5, 520.6, 740.5, 524.2, 748.5, 528.5, 756.5, 532.8, 763.5, 536.5, 770.5, 540.1, 777.5, 544.0, 784.5, 547.8, 788.0, 549.5, 791.4, 551.2, 795.3, 550.7, 799.3, 550.2, 803.0, 546.5, 806.8, 542.8, 812.6, 530.1, 818.4, 517.5, 818.5, 511.3, 818.5, 505.2, 816.0, 502.5, 813.5, 499.8, 806.5, 496.3, 799.5, 492.9, 791.5, 488.6, 783.5, 484.3, 777.5, 481.2, 771.5, 478.0, 758.1, 471.0, 744.7, 464.0, 741.6, 464.1, 738.5, 464.2, 737.0, 464.7};
        vector<float> m_ramp2Down = {708.0, 450.7, 706.5, 451.3, 704.1, 453.4, 701.8, 455.5, 699.3, 460.5, 696.9, 465.5, 693.4, 471.5, 690.0, 477.5, 687.9, 481.9, 685.8, 486.3, 686.3, 490.3, 686.9, 494.3, 689.9, 497.4, 693.0, 500.5, 698.4, 500.5, 703.8, 500.5, 706.0, 498.5, 708.3, 496.5, 710.8, 492.5, 713.4, 488.5, 716.1, 483.5, 718.9, 478.5, 721.6, 473.0, 724.4, 467.5, 724.5, 462.3, 724.5, 457.0, 721.4, 453.9, 718.2, 450.8, 713.9, 450.4, 709.5, 450.1, 708.0, 450.7};
        vector<float> m_hole1 = {237.6, 49.6, 236.0, 51.1, 236.0, 73.0, 236.0, 94.9, 237.6, 96.4, 239.1, 98.0, 240.5, 98.0, 241.9, 98.0, 243.4, 96.4, 245.0, 94.9, 245.0, 73.0, 245.0, 51.1, 243.4, 49.6, 241.9, 48.0, 240.5, 48.0, 239.1, 48.0, 237.6, 49.6};
        vector<float> m_hole2 = {237.2, 578.2, 236.0, 579.4, 236.0, 600.0, 236.0, 620.6, 237.2, 621.8, 238.4, 623.0, 240.5, 623.0, 242.6, 623.0, 243.8, 621.8, 245.0, 620.6, 245.0, 600.0, 245.0, 579.4, 243.8, 578.2, 242.6, 577.0, 240.5, 577.0, 238.4, 577.0, 237.2, 578.2};
        // Access this vector by index of rampID to get the 2 collisions shapes for that ramp
        vector<vector<float>> m_rampShapes = {
            m_launchTubeExitSensor, m_ramp1, m_ramp1Down, m_hole1, m_ramp2, m_ramp2Down, m_hole2
        };
};

#endif