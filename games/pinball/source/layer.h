#ifndef LAYER_H_
#define LAYER_H_

#include <vector>
#include "cross2d/c2d.h"
#include "Box2D/Box2D.h"
#include "util.h"

using namespace std;

// The pinball table is a series of layers.
// Each layer has it's own set of collision shapes and graphics, 
// Each layer's collision shapes have a category filter for box2d collisions.
// This allows the ball to pass from one layer to another by having the table 
// change the balls collision mask.
class Layer {
    public:
        Layer(C2DRenderer* renderer, b2World& world, uint16 categoryFilter, int layerID);
        uint16 getCategoryFilter();
    private:
        void loadShape(vector<float> points, C2DRenderer* renderer, b2World& world, uint16 categoryFilter);
        uint16 m_categoryFilter;
        vector<float> m_leftWall = {0.1, 144.2, 0.2, 288.5, 1.5, 285.5, 2.8, 282.5, 42.3, 168.5, 81.8, 54.5, 89.0, 35.2, 96.2, 16.0, 216.6, 16.0, 337.0, 16.0, 358.0, 37.0, 379.0, 58.0, 391.0, 69.0, 401.9, 80.0, 452.7, 80.0, 503.5, 80.0, 511.0, 76.2, 518.5, 72.4, 529.6, 65.8, 540.7, 59.2, 565.1, 47.2, 589.5, 35.2, 596.0, 32.2, 602.5, 29.2, 615.0, 25.2, 627.5, 21.2, 635.0, 20.0, 642.5, 18.9, 647.0, 17.8, 651.5, 16.6, 801.5, 16.3, 951.5, 15.9, 962.5, 17.0, 973.5, 18.1, 984.5, 20.5, 995.5, 22.8, 1005.0, 26.0, 1014.5, 29.1, 1026.9, 35.1, 1039.2, 41.0, 1048.9, 47.3, 1058.5, 53.6, 1067.5, 61.2, 1076.5, 68.7, 1082.5, 75.1, 1088.6, 81.5, 1094.2, 88.5, 1099.8, 95.5, 1105.4, 104.2, 1111.1, 112.9, 1117.0, 125.2, 1122.9, 137.5, 1126.3, 148.1, 1129.8, 158.7, 1131.9, 169.1, 1134.0, 179.5, 1135.2, 189.5, 1136.4, 199.5, 1136.4, 360.0, 1136.4, 520.5, 1135.2, 530.5, 1134.0, 540.5, 1131.9, 550.9, 1129.8, 561.3, 1126.3, 571.9, 1122.9, 582.5, 1117.0, 594.8, 1111.1, 607.1, 1105.4, 615.8, 1099.8, 624.5, 1094.2, 631.5, 1088.6, 638.5, 1082.5, 644.9, 1076.5, 651.3, 1067.5, 658.8, 1058.5, 666.4, 1048.9, 672.7, 1039.2, 679.0, 1026.9, 684.9, 1014.5, 690.9, 1003.9, 694.3, 993.3, 697.8, 982.9, 699.9, 972.5, 702.0, 963.5, 703.0, 954.5, 704.0, 477.3, 704.0, 1.13686837722e-13, 704.0, 1.13686837722e-13, 712.0, 1.13686837722e-13, 720.0, 576.0, 720.0, 1152.0, 720.0, 1152.0, 360.0, 1152.0, 0.0, 576.0, 0.0, 0.0, 0.0, 0.1, 144.2};
        vector<float> m_innerWall = {0.1, 527.7, 0.0, 672.0, 452.3, 672.0, 904.7, 672.0, 906.8, 669.7, 909.0, 667.4, 909.0, 663.9, 909.0, 660.3, 906.7, 658.2, 904.4, 656.0, 500.3, 656.0, 96.2, 656.0, 94.7, 651.7, 93.2, 647.5, 48.0, 518.5, 2.8, 389.5, 1.5, 386.5, 0.2, 383.5, 0.1, 527.7};
        vector<float> m_upperWall = {982.5, 227.6, 981.5, 228.0, 971.0, 230.0, 960.5, 232.1, 951.0, 234.0, 941.5, 235.9, 936.5, 237.4, 931.5, 238.8, 922.5, 242.0, 913.5, 245.1, 901.0, 250.0, 888.5, 254.8, 882.0, 256.5, 875.5, 258.2, 868.0, 260.7, 860.5, 263.2, 855.0, 264.6, 849.5, 266.1, 846.1, 267.7, 842.7, 269.3, 835.9, 270.7, 829.1, 272.1, 823.6, 274.5, 818.2, 276.9, 809.8, 279.0, 801.5, 281.2, 797.5, 282.1, 793.5, 283.0, 786.6, 283.9, 779.7, 284.8, 779.1, 285.8, 778.5, 286.8, 773.5, 287.5, 768.5, 288.1, 762.0, 289.5, 755.5, 290.9, 749.5, 292.1, 743.5, 293.4, 741.8, 295.3, 740.0, 297.3, 740.0, 301.0, 740.0, 304.8, 741.6, 305.4, 743.2, 306.0, 750.5, 306.0, 757.8, 306.0, 762.2, 304.1, 766.5, 302.3, 780.0, 299.2, 793.5, 296.0, 803.3, 294.1, 813.1, 292.1, 819.0, 293.2, 824.9, 294.3, 826.1, 297.4, 827.4, 300.5, 828.4, 301.2, 829.4, 301.9, 829.8, 314.2, 830.2, 326.6, 828.8, 328.1, 827.4, 329.5, 826.1, 332.7, 824.8, 336.0, 823.8, 336.0, 822.9, 336.0, 821.5, 337.2, 820.1, 338.5, 818.8, 339.5, 817.5, 340.5, 810.7, 343.4, 803.9, 346.3, 802.7, 347.4, 801.5, 348.6, 790.5, 352.9, 779.5, 357.3, 779.0, 357.9, 778.5, 358.5, 774.6, 360.5, 770.6, 362.5, 769.6, 363.6, 768.5, 364.6, 764.1, 366.3, 759.8, 368.1, 758.4, 369.4, 757.0, 370.8, 755.8, 371.2, 754.5, 371.7, 754.7, 376.9, 754.9, 382.1, 756.5, 383.6, 758.0, 385.1, 758.0, 386.1, 758.0, 387.0, 759.3, 387.0, 760.5, 387.1, 763.0, 390.1, 765.5, 393.1, 769.8, 397.6, 774.1, 402.0, 775.1, 402.0, 776.2, 402.0, 780.6, 406.5, 784.9, 411.0, 785.5, 411.0, 786.1, 411.0, 787.5, 412.2, 788.9, 413.5, 790.2, 414.6, 791.5, 415.6, 793.3, 416.3, 795.0, 416.9, 795.0, 418.0, 795.0, 419.0, 796.0, 419.0, 797.1, 419.0, 798.6, 420.2, 800.0, 421.5, 803.0, 424.0, 806.0, 426.5, 807.2, 427.7, 808.5, 428.9, 809.8, 430.5, 811.1, 432.0, 816.9, 432.0, 822.7, 432.0, 826.2, 428.7, 829.7, 425.5, 830.3, 422.5, 830.9, 419.5, 831.9, 415.5, 832.9, 411.5, 834.4, 405.5, 836.0, 399.5, 838.1, 392.5, 840.1, 385.5, 842.2, 379.5, 844.3, 373.5, 845.0, 368.5, 845.8, 363.5, 846.5, 361.2, 847.2, 359.0, 848.0, 359.0, 848.7, 359.0, 850.4, 354.5, 852.2, 350.0, 853.1, 350.0, 854.0, 350.0, 854.0, 348.9, 854.0, 347.9, 855.3, 346.5, 856.5, 345.1, 859.0, 342.0, 861.5, 338.9, 865.8, 334.4, 870.1, 330.0, 871.0, 330.0, 872.0, 330.0, 872.0, 328.7, 872.0, 327.5, 875.3, 325.3, 878.5, 323.1, 881.5, 321.8, 884.5, 320.5, 885.7, 319.5, 886.9, 318.5, 888.3, 317.4, 889.7, 316.2, 891.8, 315.6, 894.0, 314.9, 895.2, 313.6, 896.5, 312.4, 906.0, 308.6, 915.5, 304.7, 919.5, 303.8, 923.5, 302.9, 931.9, 301.5, 940.4, 300.1, 947.8, 298.5, 955.2, 297.0, 968.4, 297.0, 981.6, 297.0, 986.5, 298.4, 991.5, 299.8, 997.4, 301.9, 1003.2, 304.1, 1004.6, 305.3, 1005.9, 306.5, 1007.4, 307.7, 1008.9, 309.0, 1009.9, 309.0, 1010.8, 309.0, 1014.0, 312.0, 1017.2, 315.0, 1018.4, 315.0, 1019.5, 315.0, 1022.5, 318.6, 1025.5, 322.2, 1038.2, 335.0, 1050.8, 347.8, 1052.8, 348.9, 1054.9, 350.0, 1058.4, 350.0, 1061.9, 350.0, 1064.5, 348.8, 1067.0, 347.7, 1067.0, 346.8, 1067.0, 345.8, 1071.2, 341.8, 1075.5, 337.7, 1076.2, 332.1, 1076.8, 326.5, 1077.9, 322.0, 1078.9, 317.5, 1079.0, 303.3, 1079.0, 289.1, 1077.9, 284.0, 1076.8, 278.9, 1074.5, 276.6, 1072.1, 274.2, 1070.5, 268.6, 1068.9, 263.0, 1068.1, 263.0, 1067.2, 263.0, 1066.0, 260.0, 1064.8, 257.0, 1063.9, 257.0, 1063.0, 257.0, 1063.0, 255.9, 1063.0, 254.8, 1056.5, 248.7, 1050.1, 242.5, 1046.8, 239.6, 1043.5, 236.7, 1039.0, 234.7, 1034.5, 232.7, 1034.0, 232.0, 1033.5, 231.3, 1031.0, 230.8, 1028.5, 230.2, 1022.5, 228.6, 1016.6, 227.0, 1000.0, 227.1, 983.5, 227.2, 982.5, 227.6};
        vector<float> m_leftSlide = {125.0, 51.1, 122.5, 52.1, 119.7, 54.8, 116.9, 57.5, 114.5, 62.1, 112.2, 66.7, 108.9, 76.6, 105.7, 86.5, 104.4, 88.5, 103.2, 90.5, 101.5, 96.5, 99.8, 102.5, 99.5, 104.2, 99.1, 105.8, 96.4, 114.2, 93.7, 122.5, 92.8, 123.7, 91.9, 124.8, 89.5, 132.2, 87.2, 139.5, 83.5, 149.0, 79.9, 158.5, 77.5, 165.0, 75.1, 171.5, 72.6, 178.5, 70.0, 185.5, 68.8, 187.5, 67.7, 189.5, 64.3, 198.0, 61.0, 206.4, 61.8, 207.2, 62.6, 208.0, 67.5, 206.3, 72.4, 204.7, 76.6, 205.8, 80.8, 206.9, 84.6, 209.5, 88.3, 212.0, 91.5, 212.0, 94.7, 212.0, 96.7, 209.7, 98.8, 207.5, 100.8, 202.5, 102.9, 197.5, 106.5, 188.0, 110.0, 178.5, 112.5, 172.0, 115.0, 165.5, 118.5, 156.0, 122.0, 146.5, 124.5, 140.0, 127.0, 133.5, 130.5, 124.3, 134.0, 115.0, 136.1, 108.3, 138.2, 101.5, 142.2, 89.5, 146.3, 77.5, 149.0, 71.4, 151.7, 65.3, 154.1, 63.1, 156.5, 60.8, 160.0, 59.1, 163.5, 57.5, 223.4, 57.0, 283.3, 56.5, 284.3, 54.8, 285.4, 53.2, 284.1, 51.6, 282.8, 50.0, 205.1, 50.1, 127.5, 50.1, 125.0, 51.1};
        vector<float> m_rightSlide = {85.2, 461.4, 82.0, 464.8, 77.4, 466.0, 72.8, 467.3, 67.7, 465.7, 62.6, 464.0, 61.8, 464.8, 61.0, 465.6, 64.3, 474.0, 67.7, 482.5, 68.8, 484.5, 70.0, 486.5, 72.6, 493.5, 75.1, 500.5, 77.5, 507.0, 79.9, 513.5, 83.5, 523.0, 87.2, 532.5, 89.5, 539.8, 91.9, 547.2, 92.8, 548.3, 93.7, 549.5, 96.4, 557.8, 99.1, 566.2, 99.5, 567.8, 99.8, 569.5, 101.5, 575.5, 103.2, 581.5, 104.4, 583.5, 105.7, 585.5, 108.9, 595.4, 112.2, 605.3, 114.5, 609.9, 116.9, 614.5, 119.7, 617.2, 122.5, 619.9, 125.3, 620.9, 128.1, 622.0, 205.4, 622.0, 282.8, 622.0, 284.1, 620.4, 285.4, 618.8, 284.3, 617.2, 283.3, 615.5, 223.4, 615.0, 163.5, 614.5, 160.0, 612.9, 156.5, 611.2, 154.1, 608.9, 151.7, 606.7, 149.0, 600.6, 146.3, 594.5, 142.2, 582.5, 138.2, 570.5, 136.1, 563.7, 134.0, 557.0, 130.5, 547.7, 127.0, 538.5, 124.5, 532.0, 122.0, 525.5, 118.5, 516.0, 115.0, 506.5, 112.5, 500.0, 110.0, 493.5, 106.5, 484.0, 102.9, 474.5, 99.6, 466.5, 96.3, 458.5, 92.4, 458.2, 88.5, 458.0, 85.2, 461.4};
        vector<float> m_leftSlideLine = {176.9, 88.6, 175.6, 90.2, 176.7, 91.8, 177.7, 93.5, 217.5, 93.5, 257.3, 93.5, 258.3, 91.8, 259.4, 90.2, 258.1, 88.6, 256.8, 87.0, 217.5, 87.0, 178.2, 87.0, 176.9, 88.6};
        vector<float> m_rightSlideLine = {176.9, 573.6, 175.6, 575.2, 176.7, 576.8, 177.7, 578.5, 217.5, 578.5, 257.3, 578.5, 258.3, 576.8, 259.4, 575.2, 258.1, 573.6, 256.8, 572.0, 217.5, 572.0, 178.2, 572.0, 176.9, 573.6};
        vector<float> m_leftBumper = {169.9, 125.0, 168.3, 126.0, 167.0, 129.2, 165.8, 132.5, 164.0, 136.5, 162.2, 140.5, 159.5, 147.0, 156.7, 153.5, 155.0, 157.5, 153.2, 161.5, 150.6, 168.0, 147.9, 174.5, 146.3, 177.4, 144.8, 180.2, 144.6, 185.6, 144.5, 190.9, 145.8, 192.2, 147.1, 193.5, 151.3, 193.5, 155.5, 193.5, 163.0, 189.0, 170.5, 184.5, 173.0, 183.1, 175.5, 181.7, 179.0, 179.8, 182.5, 177.9, 185.5, 176.1, 188.5, 174.3, 193.0, 171.6, 197.5, 168.9, 200.3, 167.9, 203.0, 166.8, 205.8, 164.1, 208.5, 163.1, 213.5, 160.0, 218.5, 156.9, 221.3, 155.9, 224.0, 154.8, 226.3, 152.5, 228.5, 151.8, 231.5, 149.5, 234.5, 147.3, 236.7, 146.6, 238.8, 145.9, 240.0, 144.5, 241.2, 143.0, 242.7, 143.0, 244.1, 143.0, 246.2, 141.0, 248.4, 139.0, 249.9, 139.0, 251.4, 139.0, 254.2, 136.3, 257.0, 133.6, 257.0, 131.0, 257.0, 128.3, 254.7, 126.2, 252.4, 124.0, 211.9, 124.0, 171.5, 124.1, 169.9, 125.0};
        vector<float> m_rightBumper = {147.4, 466.9, 145.3, 467.8, 144.6, 470.5, 143.9, 473.1, 144.6, 476.8, 145.3, 480.5, 146.6, 483.0, 147.9, 485.5, 150.6, 492.0, 153.2, 498.5, 155.0, 502.5, 156.7, 506.5, 159.5, 513.0, 162.2, 519.5, 164.0, 523.5, 165.8, 527.5, 167.0, 530.8, 168.3, 534.1, 170.1, 535.0, 171.9, 536.0, 212.3, 536.0, 252.7, 536.0, 254.8, 533.7, 257.0, 531.4, 257.0, 529.0, 257.0, 526.6, 254.3, 523.8, 251.6, 521.0, 250.0, 521.0, 248.4, 521.0, 246.2, 519.0, 244.1, 517.0, 242.7, 517.0, 241.2, 517.0, 240.0, 515.5, 238.8, 514.1, 236.7, 513.4, 234.5, 512.7, 231.5, 510.5, 228.5, 508.2, 226.3, 507.5, 224.0, 506.9, 221.3, 504.1, 218.5, 503.1, 213.5, 500.0, 208.5, 496.9, 205.8, 495.9, 203.0, 494.8, 200.3, 492.1, 197.5, 491.1, 193.0, 488.4, 188.5, 485.7, 185.5, 483.9, 182.5, 482.1, 179.0, 480.2, 175.5, 478.3, 173.0, 476.9, 170.5, 475.5, 163.4, 471.2, 156.2, 466.9, 152.9, 466.5, 149.5, 466.0, 147.4, 466.9};
        vector<vector<float>> m_layer1ShapeData = {
            m_leftWall, m_innerWall, m_upperWall, m_leftSlide, m_rightSlide, m_rightSlideLine, m_leftSlideLine, m_leftBumper, m_rightBumper
        };
        // TODO: layer 2
        vector<float> m_innerRails = {881.0, 55.0, 874.5, 55.8, 851.5, 63.4, 828.5, 71.1, 825.0, 72.6, 821.5, 74.1, 820.0, 75.0, 818.5, 76.0, 814.5, 77.9, 810.4, 79.9, 801.0, 83.4, 791.5, 86.9, 772.0, 93.8, 752.5, 100.7, 736.5, 105.3, 720.5, 109.9, 709.5, 111.6, 698.5, 113.3, 694.0, 113.9, 689.5, 114.6, 682.5, 117.2, 675.5, 119.8, 671.9, 120.4, 668.3, 121.0, 666.4, 123.1, 664.6, 125.1, 664.6, 128.6, 664.6, 132.0, 666.6, 134.1, 668.6, 136.1, 672.3, 136.7, 676.0, 137.3, 684.8, 134.2, 693.5, 131.2, 708.0, 129.0, 722.5, 126.9, 736.5, 122.9, 750.5, 118.9, 779.5, 108.8, 808.5, 98.7, 809.5, 97.8, 810.4, 97.0, 812.1, 97.0, 813.7, 97.0, 823.6, 92.1, 833.5, 87.2, 856.5, 79.5, 879.5, 71.9, 893.5, 71.7, 907.5, 71.5, 914.5, 72.6, 921.6, 73.8, 929.5, 77.0, 937.5, 80.3, 943.4, 86.4, 949.2, 92.5, 952.4, 97.5, 955.7, 102.5, 958.7, 109.0, 961.8, 115.5, 963.5, 121.0, 965.3, 126.5, 966.0, 127.5, 966.8, 128.5, 970.0, 139.9, 973.3, 151.3, 972.7, 157.6, 972.1, 163.9, 969.1, 174.3, 966.0, 184.7, 960.4, 195.6, 954.7, 206.5, 951.6, 210.8, 948.5, 215.1, 944.6, 220.0, 940.6, 225.0, 939.9, 225.0, 939.2, 225.0, 933.7, 229.5, 928.1, 234.0, 927.3, 234.0, 926.4, 234.0, 923.4, 237.1, 920.5, 240.3, 915.0, 243.8, 909.5, 247.4, 901.3, 251.7, 893.1, 255.9, 881.8, 258.9, 870.5, 261.9, 862.3, 264.4, 854.0, 266.9, 844.3, 269.0, 834.5, 271.1, 821.0, 274.9, 807.5, 278.8, 790.0, 281.4, 772.5, 284.0, 768.3, 284.0, 764.1, 284.0, 754.8, 287.1, 745.5, 290.2, 742.6, 293.1, 739.6, 295.9, 739.6, 299.4, 739.6, 302.9, 741.4, 304.9, 743.1, 306.8, 745.6, 307.4, 748.1, 308.1, 751.3, 306.4, 754.5, 304.8, 760.5, 302.9, 766.5, 301.0, 770.1, 301.0, 773.8, 301.0, 786.6, 299.1, 799.5, 297.1, 807.0, 295.9, 814.5, 294.8, 823.0, 292.0, 831.5, 289.3, 845.5, 286.1, 859.5, 282.9, 869.0, 280.0, 878.5, 277.1, 888.3, 274.5, 898.2, 272.0, 908.5, 267.0, 918.8, 262.0, 920.0, 260.5, 921.2, 259.0, 922.4, 259.0, 923.6, 259.0, 929.2, 254.0, 934.8, 249.0, 935.5, 249.0, 936.2, 249.0, 941.3, 244.7, 946.5, 240.5, 948.5, 239.4, 950.5, 238.3, 956.5, 231.3, 962.5, 224.2, 965.9, 219.5, 969.4, 214.8, 972.6, 208.7, 975.8, 202.5, 979.0, 196.1, 982.1, 189.7, 985.6, 177.8, 989.1, 165.8, 989.7, 157.2, 990.2, 148.5, 986.5, 136.0, 982.8, 123.5, 981.0, 119.5, 979.3, 115.5, 977.1, 109.5, 974.9, 103.5, 971.7, 97.0, 968.6, 90.5, 961.8, 82.0, 955.1, 73.5, 950.8, 70.0, 946.5, 66.5, 942.0, 64.3, 937.5, 62.1, 933.0, 60.2, 928.5, 58.2, 923.5, 57.2, 918.5, 56.1, 912.4, 55.1, 906.4, 54.0, 896.9, 54.1, 887.5, 54.3, 881.0, 55.0};
        vector<float> m_outerRails = {910.0, 2.1, 895.5, 3.0, 883.5, 3.3, 871.5, 3.6, 864.5, 6.7, 857.5, 9.8, 853.5, 10.5, 849.5, 11.2, 837.0, 15.1, 824.5, 19.1, 814.5, 22.1, 804.5, 25.2, 798.5, 27.0, 792.5, 28.7, 787.7, 29.9, 783.0, 31.0, 780.2, 31.0, 777.5, 31.0, 771.5, 32.9, 765.5, 34.8, 756.0, 35.9, 746.5, 37.1, 739.5, 38.2, 732.5, 39.2, 692.8, 39.7, 653.0, 40.1, 648.8, 40.9, 644.5, 41.7, 636.5, 44.0, 628.5, 46.2, 619.8, 48.8, 611.0, 51.4, 608.3, 54.2, 605.6, 57.0, 605.6, 60.5, 605.6, 63.9, 607.4, 65.9, 609.1, 67.8, 611.6, 68.4, 614.0, 69.0, 618.6, 67.0, 623.1, 64.9, 629.8, 63.4, 636.5, 61.8, 642.5, 59.7, 648.5, 57.6, 678.5, 56.9, 708.5, 56.1, 718.5, 56.7, 728.6, 57.3, 737.5, 55.7, 746.5, 54.1, 756.9, 53.0, 767.2, 51.9, 773.4, 49.9, 779.5, 48.0, 782.4, 48.0, 785.3, 48.0, 789.4, 47.0, 793.5, 45.9, 800.0, 44.0, 806.5, 42.2, 816.5, 39.1, 826.5, 36.1, 835.5, 33.5, 844.5, 30.8, 845.4, 29.9, 846.4, 29.0, 848.1, 29.0, 849.8, 29.0, 858.6, 26.4, 867.5, 23.9, 870.9, 22.2, 874.4, 20.6, 885.9, 20.4, 897.5, 20.2, 917.0, 19.1, 936.5, 17.9, 942.0, 18.9, 947.5, 19.9, 954.5, 20.5, 961.4, 21.1, 968.5, 23.9, 975.5, 26.7, 979.0, 27.5, 982.5, 28.2, 990.7, 32.1, 998.9, 36.1, 1003.4, 41.1, 1008.0, 46.2, 1008.0, 47.3, 1008.0, 48.3, 1013.3, 54.1, 1018.5, 59.9, 1021.1, 63.2, 1023.7, 66.5, 1026.9, 77.0, 1030.1, 87.5, 1033.8, 108.0, 1037.5, 128.5, 1037.3, 145.4, 1037.1, 162.3, 1035.0, 174.4, 1032.8, 186.5, 1028.5, 199.5, 1024.2, 212.5, 1022.6, 215.5, 1021.0, 218.5, 1021.0, 220.1, 1021.0, 221.8, 1019.4, 225.6, 1017.9, 229.5, 1014.4, 236.6, 1011.0, 243.6, 1011.0, 244.4, 1011.0, 245.1, 1007.1, 250.8, 1003.2, 256.5, 1000.4, 259.1, 997.5, 261.7, 993.0, 264.6, 988.5, 267.5, 963.5, 279.9, 938.5, 292.3, 936.5, 294.0, 934.5, 295.7, 931.0, 297.0, 927.5, 298.3, 916.5, 303.8, 905.5, 309.3, 901.3, 312.1, 897.2, 315.0, 888.8, 317.5, 880.5, 320.1, 871.0, 322.9, 861.5, 325.8, 852.0, 328.5, 842.5, 331.2, 838.3, 333.1, 834.1, 335.0, 832.8, 335.0, 831.5, 335.0, 828.9, 336.4, 826.2, 337.8, 820.9, 339.5, 815.5, 341.2, 812.4, 343.0, 809.4, 344.7, 804.2, 346.4, 799.0, 348.2, 798.5, 349.1, 797.9, 350.0, 793.7, 351.9, 789.5, 353.7, 786.5, 354.4, 783.5, 355.1, 771.5, 361.0, 759.4, 367.0, 756.0, 370.5, 752.6, 374.0, 752.6, 377.5, 752.6, 381.0, 754.8, 383.2, 757.0, 385.4, 760.5, 385.4, 763.9, 385.4, 766.2, 383.3, 768.5, 381.2, 778.7, 376.1, 789.0, 371.0, 790.1, 371.0, 791.2, 371.0, 797.8, 368.4, 804.5, 365.7, 806.1, 364.4, 807.7, 363.0, 812.6, 361.4, 817.5, 359.7, 819.0, 358.5, 820.5, 357.3, 824.5, 356.0, 828.5, 354.8, 839.9, 350.3, 851.2, 345.8, 858.9, 343.9, 866.5, 341.9, 878.0, 338.4, 889.5, 335.0, 897.5, 332.3, 905.5, 329.6, 910.0, 326.6, 914.5, 323.5, 923.9, 318.8, 933.3, 314.0, 934.2, 314.0, 935.2, 314.0, 938.8, 312.3, 942.5, 310.7, 944.2, 309.2, 945.9, 307.8, 950.7, 305.3, 955.5, 302.8, 977.4, 291.6, 999.3, 280.5, 1001.9, 279.1, 1004.5, 277.7, 1013.2, 269.0, 1021.8, 260.3, 1027.5, 248.5, 1033.2, 236.7, 1037.2, 225.1, 1041.2, 213.5, 1042.0, 212.5, 1042.7, 211.5, 1046.3, 199.5, 1049.9, 187.5, 1051.5, 178.5, 1053.2, 169.5, 1054.0, 159.0, 1054.9, 148.5, 1054.9, 140.0, 1055.0, 131.5, 1052.5, 117.0, 1050.0, 102.5, 1048.3, 93.5, 1046.7, 84.5, 1043.2, 73.0, 1039.8, 61.5, 1037.9, 57.7, 1036.0, 54.0, 1029.5, 47.1, 1023.0, 40.3, 1023.0, 39.4, 1023.0, 38.5, 1016.7, 31.3, 1010.5, 24.0, 1008.1, 22.3, 1005.6, 20.6, 996.1, 15.8, 986.5, 11.0, 984.4, 11.0, 982.2, 11.0, 972.6, 7.5, 963.0, 4.0, 952.8, 2.9, 942.5, 1.7, 933.5, 1.5, 924.5, 1.3, 910.0, 2.1};
        vector<vector<float>> m_layer2ShapeData = {
            m_innerRails, m_outerRails
        };

        // All the layers
        vector<vector<vector<float>>> m_layerData = {m_layer1ShapeData, m_layer2ShapeData};
};
#endif