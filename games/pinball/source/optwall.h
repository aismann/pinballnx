#ifndef OPTWALL_H_
#define OPTWALL_H_

#include<vector>
#include "cross2d/c2d.h"
#include "Box2D/Box2D.h"
#include "util.h"

using namespace std;

class OptWall {
    public:
        OptWall(C2DRenderer* renderer, b2World& world, int optWallId, int layerID);
        void disable();
        void enable();
        void toggle();
        bool isEnabled();
    private:
        b2Fixture* m_fixture;
        int m_layerID;
        C2DTexture* m_textureEnabled;
        C2DTexture* m_textureDisabled;
        ConvexShape* m_shapeEnabled;
        bool m_isEnabled;

        vector<float> m_leftRailWall = {1019.3, 303.9, 1015.2, 306.8, 1010.9, 309.2, 1006.5, 311.5, 986.0, 312.0, 965.5, 312.5, 965.5, 314.5, 965.5, 316.5, 988.0, 316.7, 1010.5, 317.0, 1019.3, 310.9, 1028.1, 304.8, 1027.8, 303.2, 1027.5, 301.5, 1025.4, 301.2, 1023.4, 300.9, 1019.3, 303.9};
        vector<float> m_underLayerLock1 = {697.7, 7.7, 697.0, 8.3, 697.0, 27.7, 697.0, 47.0, 699.3, 48.1, 701.7, 49.2, 706.6, 47.7, 711.5, 46.2, 724.0, 40.8, 736.5, 35.3, 763.3, 24.5, 790.2, 13.6, 790.8, 12.2, 791.3, 10.7, 789.1, 8.8, 786.8, 7.0, 742.6, 7.0, 698.3, 7.0, 697.7, 7.7};
        vector<float> m_underLayerLock2 = {521.4, 447.7, 519.6, 450.5, 513.6, 460.0, 507.5, 469.5, 504.5, 475.2, 501.5, 480.9, 502.7, 482.1, 503.9, 483.3, 505.2, 482.7, 506.6, 482.2, 512.9, 471.7, 519.3, 461.1, 523.6, 456.9, 527.8, 452.8, 534.2, 451.0, 540.5, 449.3, 540.5, 447.4, 540.5, 445.5, 531.8, 445.2, 523.1, 444.9, 521.4, 447.7};
        vector<float> m_leftKickerLock = {87.6, 7.2, 86.2, 9.5, 78.9, 28.4, 71.7, 47.3, 72.7, 48.9, 73.7, 50.5, 75.3, 50.8, 76.9, 51.1, 78.4, 48.8, 79.8, 46.5, 87.1, 27.6, 94.3, 8.7, 93.3, 7.1, 92.3, 5.5, 90.7, 5.2, 89.1, 4.9, 87.6, 7.2};
        vector<float> m_rightKickerLock = {70.2, 616.2, 69.0, 617.4, 69.0, 618.5, 69.0, 619.6, 77.0, 641.5, 85.0, 663.5, 86.4, 664.9, 87.8, 666.3, 89.4, 665.7, 91.0, 665.0, 91.6, 663.5, 92.2, 662.0, 84.5, 640.8, 76.8, 619.5, 75.4, 617.2, 74.0, 615.0, 72.7, 615.0, 71.4, 615.0, 70.2, 616.2};
        vector<float> m_rightLock = {930.3, 492.5, 896.1, 497.7, 894.6, 498.3, 893.0, 498.9, 893.0, 501.0, 893.0, 503.1, 894.4, 503.6, 895.7, 504.1, 932.6, 498.6, 969.4, 493.0, 970.3, 492.1, 971.2, 491.2, 970.8, 489.4, 970.5, 487.5, 967.5, 487.3, 964.5, 487.2, 930.3, 492.5};
        vector<float> m_topLeftLock = {937.0, 12.4, 937.0, 14.8, 945.8, 15.4, 954.5, 16.0, 967.8, 17.0, 981.1, 18.1, 989.8, 19.5, 998.5, 21.0, 1011.0, 24.1, 1023.5, 27.2, 1033.5, 31.0, 1043.5, 34.7, 1051.5, 38.7, 1059.5, 42.7, 1064.4, 42.1, 1069.3, 41.5, 1059.9, 36.4, 1050.5, 31.2, 1038.6, 26.5, 1026.7, 21.9, 1012.6, 18.4, 998.5, 14.9, 995.4, 14.0, 992.4, 13.0, 967.5, 11.5, 942.5, 10.0, 939.8, 10.0, 937.0, 10.0, 937.0, 12.4};
        vector<float> m_leftRailWall2 = {986.6, 287.2, 976.5, 297.6, 969.7, 305.2, 962.9, 312.9, 963.2, 315.7, 963.5, 318.5, 965.1, 318.8, 966.7, 319.1, 984.9, 300.0, 1003.1, 281.0, 1002.8, 279.2, 1002.5, 277.5, 999.5, 277.2, 996.6, 276.8, 986.6, 287.2};
        vector<vector<float>> m_WallShapes = {
            m_leftRailWall, m_underLayerLock1, m_underLayerLock2, m_leftKickerLock, m_rightKickerLock, m_rightLock, m_topLeftLock, m_leftRailWall2
        };
        vector<float> m_positions = {
            965, 301,
            704, 14,
            503, 450,
            73, 18,
            72, 624,
            894, 487,
            955, 14,
            962, 277
        };
};

#endif